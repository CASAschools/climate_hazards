```{r, message = FALSE, warning = FALSE}
library(sf)
library(tidyverse)
library(tmap)
```


### Calculating sea level rise with information for just one county

Data preparation. We are using data from the USGS Coastal Storm Modeling system, or CoSMoS. The data we downloaded are polygons describing the extent of coastal flooding under a .8 ft sea level rise scenario and a 100 year coastal storm. The data covers coastal areas from San Diego County north to Point Arena in Mendocino County, but lacks coverage of the coastal areas north of there. It also covers the San Francisco bay inner coastline. The values are given in centimeters, with .8 feet equaling 25 cm.

```{r}
# read in sea level rise polygons
slr_la <- st_read("/capstone/casaschools/sea_level_rise/raw_data/cosmos/slr_la",
                  quiet = TRUE)

# read in CA school districts
ca_schools <- st_read("/capstone/casaschools/schools_data/schools_buffer_clip",
                      quiet = TRUE)

# filter to Alameda County districts
alameda_districts <- ca_schools %>% 
  filter(CountyName %in% "Alameda")

plot(alameda_districts)
```

Next, we need to find the percentage of area of each school polygon that is inundated with this scenario. We need to ensure that the layers are on the same CRS so that we can perform spatial operations on them

```{r}
# get our school boundaries and our sea level rise on the same CRs
alameda_slr <- st_transform(alameda_slr, crs = st_crs(alameda_districts))

#st_crs(alameda_slr) == st_crs(alameda_districts)
```

Next, we are going to find the intersections. We are going to find the area of intersection of the sea level rise polygon on each school district. Then, we are going to calculate the areas using st_area, and join the two dataframes together. The units are in square meters.
```{r}
# find the intersections
slr_districts <- st_intersection(alameda_districts, alameda_slr)

plot(intersections)

# find the area of each intersection polygon
slr_districts$slr_area <- st_area(slr_districts)

# also find the area of each original district polygon to compare
alameda_districts$area <- st_area(alameda_districts)

## join the two together
# select only neccessary columns to join
slr_districts <- slr_districts %>% 
  select(DistrictNa, slr_area)

# conduct a join, converting the sf objects into dataframes
slr_alameda <- full_join(alameda_districts %>% as.data.frame(), 
                     slr_districts %>% as.data.frame(), 
                     by = "DistrictNa", keep = FALSE) %>% 
  mutate(area = as.numeric(area), # convert areas to numeric, dropping the units
         slr_area = as.numeric(slr_area)) %>% 
  mutate(slr_area = replace_na(slr_area, 0)) %>% # replace NAs with 0s
  mutate(slr_percent = (slr_area / area) * 100) %>% # calculate sea level rise inundation percentage
  st_sf(sf_column_name = "geometry.x") # convert back to an sf object
```

```{r}
# plot the alameda school districts by percentage sea level rise
tm_shape(slr_alameda) +
  tm_polygons(fill = "slr_percent")

tm_shape(alameda_slr) +
  tm_polygons() +
  tm_shape(slr_alameda) +
  tm_polygons(fill = "slr_percent")
```


## Scaling up the process for all counties

Beginning with just two counties, Contra Costa and Marin. The data is downloaded county by county, and the names of the files are all the same, so we need to rename the files

```{r}
# read in sea level rise polygons
cc_slr <- st_read(here("data", "slr_contra_costa", "cc.shp"))

```


